/**
 * Test script to verify the complete checkout integration with shipping labels
 * This simulates the exact flow that happens when a customer completes checkout
 */

const testCheckoutIntegration = async () => {
  console.log('üß™ TESTING - Starting checkout integration test...');
  
  // Simulate the exact order data structure that gets sent from checkout
  const testOrderData = {
    orderId: "100425", // This would be generated by generateOrderNumber()
    customerInfo: {
      firstName: "John",
      lastName: "Doe", 
      email: "john.doe@example.com",
      phone: "555-123-4567",
      address: "123 Main Street",
      city: "Anytown",
      state: "CA",
      zipCode: "12345",
      fullName: "John Doe"
    },
    orderDetails: {
      package: "Popular",
      packagePrice: "$179.00",
      packageFeatures: "Digitize up to 10 tapes OR up to 250 photos, Online access to digital files, Free shipping both ways, Online Backup (1 Year Free)",
      subtotal: "$203.95",
      couponCode: "None",
      discountPercent: 0,
      discountAmount: "$0.00",
      totalAmount: "$203.95",
      digitizingSpeed: "Standard",
      digitizingTime: "4-6 weeks",
      digitizingPrice: "Free",
      addOns: ["1 USB Drive(s) - $24.95"],
      addOnDetails: {
        photoRestoration: { selected: false, cost: 0 },
        videoEnhancement: { selected: false, cost: 0 },
        digitalDelivery: { selected: false, cost: 0 },
        expressShipping: { selected: false, cost: 0 },
        storageUpgrade: { selected: true, cost: 24.95 },
        backupCopies: { selected: false, cost: 0 }
      },
      speedDetails: {
        standardSpeed: { selected: true, cost: 0, timeframe: '4-6 weeks' },
        expressSpeed: { selected: false, cost: 0, timeframe: '' },
        rushSpeed: { selected: false, cost: 0, timeframe: '' }
      }
    },
    paymentMethod: "Credit Card (Visa ending in 4242)",
    timestamp: new Date().toISOString()
  };

  try {
    console.log('üì¶ TESTING - Calling /api/create-order endpoint...');
    console.log('üì¶ TESTING - Order data:', JSON.stringify(testOrderData, null, 2));

    const response = await fetch('http://localhost:3000/api/create-order', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testOrderData),
    });

    const result = await response.json();
    
    console.log('üì¶ TESTING - API Response:', JSON.stringify(result, null, 2));

    if (result.success) {
      console.log('‚úÖ TESTING SUCCESS - Complete checkout integration working!');
      console.log('‚úÖ TESTING - Order saved to Airtable:', result.customerId, result.orderId);
      
      if (result.shipping?.labelsGenerated) {
        console.log('‚úÖ TESTING - Shipping labels generated successfully!');
        console.log('üì¶ TESTING - Label 1 (HBox ‚Üí Customer):', result.shipping.trackingNumbers?.label1);
        console.log('üì¶ TESTING - Label 2 (Customer ‚Üí HBox):', result.shipping.trackingNumbers?.label2);
        console.log('üì¶ TESTING - Label 3 (HBox ‚Üí Customer):', result.shipping.trackingNumbers?.label3);
      } else {
        console.log('‚ö†Ô∏è TESTING WARNING - Shipping labels not generated');
      }
    } else {
      console.error('‚ùå TESTING ERROR - API call failed:', result.error);
    }

  } catch (error) {
    console.error('‚ùå TESTING ERROR - Failed to call API:', error);
  }
};

// Run the test
testCheckoutIntegration();
